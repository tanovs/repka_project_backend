from goods.good import AddGood, AddGoodRequest
from suppliers.add_suppliers import add_suppliers
import requests

def get_good_data_vkusnie_istoryy(supplier: str):
    name = ["Мусс творожный фруктово - ягодный (клубника-манго), 130г", "Смузи Боул Ананас, Банан, Кокос, 120г", "СМУЗИ боул манго, маракуйя, кокос, 120 г", "Желе фруктово-ягодное(арбуз, дыня), 160г", "Чиа светофор, 90г", "Мусс Кокосовый 110г", "Мусс шоколадно-карамельный 120г", "Фруктовый микс Манго, Клубника, 140г", "Мусс карамельный, 120г", "Микс Манго, Голубика 200г", "Ананас Кубики, 300г", "Ананас целый, 400г", "Ананас Полукольца, 300г", "Гранат Зерна, 120г", "Фруктовый микс манго, клубника, голубика 400г", "Фруктовый микс ананас, клубника, голубика 400г"]
    price = ["р.168,00", "р.138,00", "р.136,00", "р.133,00", "р.137,50", "р.139,00", "р.137,50", "р.163,50", "р.132,00", "р.243,00", "р.342,00", "р.430,30", "р.360,00", "р.169,18", "р.486,00", "р.476,00"]
    volume = ["130г", "120г", "120г", "160г", "90г", "110г", "120г", "140г", "120г", "200г", "300г", "400г", "300г", "120г", "400г", "400г"]
    calories = ["161", "188,1", "139,8", "46,9", "198", "357", "333,4", "57,3", "465,6", "57", "52", "52", "52", "72", "60,5", "46,2"]
    compound = ["манго свежее, сливки питьевые м.д.ж. 33% (сливки нормализованные), творог мягкий обезжиренный(молоко обезжиренное пастеризованное с использованием закваски. Технологическое средство: ферментный препарат животного происхождения пепсин, химозин.), йогурт питьевой (нормализованное молоко, восстановленное молоко из сухого молока, йогуртовая закваска, бифидобактерии B.Lactis), cахар, клубника свежая, вода, семена чиа, желатин говяжий,ванильная паста (сахар, глюкозный сироп, обезжиренное сгущенное молоко, ванильный экстракт, натуральный ароматизатор (ваниль), мадагаскарские ванильные бобы, крахмал, растительные экстракты). Продукт может содержать следы орехов.",
                "кокосовые «сливки» (мякоть кокосового ореха 90%, вода 9,9%, стабилизаторы (ксантановая камедь, гуаровая камедь) 0,1%), банан, ананас, ксантановая камедь, натуральный экстракт ванили, кокосовое масло, голубика, семена чиа, кокосовая стружка.",
                "яблоко, Ананас, Банан, манго, Пюре Манго, Сахар, Кокосовые Сливки, Кокосовое Молоко, Пюре Маракуйя, Кокосовое Масло, Голубика, Кокос, Ксантановая Камедь, Семена Чиа, Цедра Лайма, Ванильная Паста",
                "Вода, арбуз, дыня, сахар, вода, желатин, Лимонная Кислота, Ароматизатор натуральный дыня", "Кокосовое Молоко, вода, Семена Чиа, фруктоза, манго, киви, клубника, Ванильная Паста",
                "Сливочное масло 72,5%, сахар, сухой желток, сухой белок, вода, кокосовые сливки, пшеничная мука, разрыхлитель, мелкая кокосовая стружка, кукурузный крахмал,молоко 2,5%, сливки 33%, соль,ванилин, клубника, миндальная крошка",
                "сливки 33%, сахар, масло сливочное 72,5%, мед, голубика, мука пшеничная, какао, инвертный сахарный сироп, белок яичный сухой, вода, желатин, соль, ванильная паста, сода питьевая, кофе сублимированный растворимый.",
                "Манго, клубника", "арахис жареный, молоко 2,5%, сливки 33%, масло сливочное 72,2%, инвертный сахарный сироп, клубника, голубика, вафельная крошка, шоколад молочный, яичный сухой белок, желатин, вода, подсолнечное масло, мука пшеничная, какао масло, какао, разрыхлитель, соль.",
                "Манго, голубника", "Ананас", "Ананас", "Ананас", "Гранат", "манго, клубника, голубика", "ананас, клубника, голубика"]
    expiration_day = ["4", "4", "4", "7", "4", "7", "7", "4", "7", "5", "7", "7", "4", "4", "4", "4"]
    brand = "FresCo"
    supplier_id = supplier
    tag_id = [
        "a0c0dc81-f076-4b06-9922-d290c6a4c800",
        "79612acf-10e4-43e9-b087-410042d00dc3",
        "79612acf-10e4-43e9-b087-410042d00dc3",
        "2d3a2803-3dd8-43a3-8a88-596d45c3d7d7",
        "2d3a2803-3dd8-43a3-8a88-596d45c3d7d7",
        "2d3a2803-3dd8-43a3-8a88-596d45c3d7d7",
        "2d3a2803-3dd8-43a3-8a88-596d45c3d7d7",
        "40dcf6b8-c3f7-4f42-905c-c5a12178741b",
        "2d3a2803-3dd8-43a3-8a88-596d45c3d7d7",
        "40dcf6b8-c3f7-4f42-905c-c5a12178741b",
        "40dcf6b8-c3f7-4f42-905c-c5a12178741b",
        "40dcf6b8-c3f7-4f42-905c-c5a12178741b",
        "40dcf6b8-c3f7-4f42-905c-c5a12178741b",
        "40dcf6b8-c3f7-4f42-905c-c5a12178741b",
        "40dcf6b8-c3f7-4f42-905c-c5a12178741b",
        "40dcf6b8-c3f7-4f42-905c-c5a12178741b",
    ]
    body = AddGoodRequest(supplier_id=supplier_id, goods=[])
    for i in range(0, 16):
        good = AddGood(
            name = name[i],
            price = price[i],
            volume = volume[i],
            calories = calories[i],
            compound = compound[i],
            expiration_day = expiration_day[i],
            producer = brand,
            tag_id = tag_id[i],
            balance=0,
        )
        body.goods.append(good)
    return body


def get_good_data_zagotprom(supplier: str):
    name = ["Полуфабрикат концентрированного морса стандарт клюквенный (2 кг.)", "Полуфабрикат концентрированного морса стандарт черносмородиновый (2 кг.)", "Полуфабрикат концентрированного морса стандарт облепиховый (2 кг.)", "Черника замороженная (10кг)", "Пюре фруктовое, консервированное асептическим способом (клюква) (2 кг.)"]
    price = ["р.290,00", "р.290,00", "р.290,00", "р.280,00", "р.420,00"]
    volume = ["200кг", "200кг", "200кг", "500кг", "200кг"]
    calories = ["207; 0,5; 0; 53,7", "215; 0,6; 0,2; 57,3", "234; 1,2; 5,4; 55,7", "57; 0,74; 0,33; 12,09", "28; 05; 0; 3,1"]
    compound = ["Клюква, сахар", "Черная смородина, сахар", "Облепиха, сахар", "Черника", "Клюква"]
    expiration_day = "12 мес"
    brand = "Zagotprom"
    supplier_id = supplier
    tag_id = [
        "79612acf-10e4-43e9-b087-410042d00dc3",
        "79612acf-10e4-43e9-b087-410042d00dc3",
        "79612acf-10e4-43e9-b087-410042d00dc3",
        "62c475cb-d52c-4543-b38d-c1201223eb17",
        "62c475cb-d52c-4543-b38d-c1201223eb17",
    ]
    body = AddGoodRequest(supplier_id=supplier_id, goods=[])
    for i in range(0, 5):
        good = AddGood(
            name = name[i],
            price = price[i],
            volume = volume[i],
            calories = calories[i],
            compound = compound[i],
            expiration_day = expiration_day,
            producer = brand,
            tag_id = tag_id[i],
            balance=0,
        )
        body.goods.append(good)
    return body

def get_good_data_ferro(supplier: str):
    name = ["Спагетти №9", "Спагетти №12", "Тальятелле", "Казаречче", "Папарделле", "Лингвини", "Маккерони", "Фузилли", "Ньокки картофельные", "Цветная паста с натуральными красителями"]
    price = ["р.380,00", "р.380,00", "р.380,00", "р.380,00", "р.380,00", "р.380,00", "р.380,00", "р.380,00", "р.380,00", "р.420,00"]
    volume = "1 кг"
    balance = "400 г"
    compound = "Мука из твёрдых сортов пшеницы (семола), вода питьевая минерализованная, яйцо куриное пастеризованное, соль морская."
    expiration_day = "от 14 до 30 суток (+2..+4)"
    brand = "Ferro"
    supplier_id = supplier
    tag_id = "b0bcc74b-7575-460c-b460-52cd616fb685"
    body = AddGoodRequest(supplier_id=supplier_id, goods=[])
    for i in range(0, 5):
        good = AddGood(
            name = name[i],
            price = price[i],
            volume = volume,
            compound = compound,
            expiration_day = expiration_day,
            producer = brand,
            tag_id = tag_id,
            balance=balance,
        )
        body.goods.append(good)
    return body

def get_good_data(data_type: str, supplier_id: str):
    tmp = {
        'vkusnie_istoryy': get_good_data_vkusnie_istoryy,
        'zagotprom': get_good_data_zagotprom,
        'ferro': get_good_data_ferro,
    }
    return tmp[data_type](supplier_id)

def main():
    supplier_ids = add_suppliers()
    companies = {1: 'vkusnie_istoryy', 2: 'zagotprom', 3:'ferro'}
    for i in range(1, 4):
        goods = get_good_data(companies[i], supplier_ids[i])
        result = requests.post('http://89.208.198.57:8080/api/v1/good/add', data=goods.json())
        print(result.status_code)
        

if __name__ == '__main__':
    main()