version: '3'
services:
  postgres:
    image: postgres:13.3
    env_file: ./env/postgres/.env
    ports:
      - 5432:5432
    restart: on-failure
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d repka_database -U repka" ]
      interval: 10s
      timeout: 10s
    volumes:
      - ./postgres/dump_09032023.sql:/docker-entrypoint-initdb.d/dump_09032023.sql
      - postgres_data:/var/lib/postgresql/data

  repka_admin:
    build: ./repka_admin
    env_file:
      - ./env/repka_admin/.env
    volumes:
      - static_volume:/opt/repka_admin/application/static/
    ports:
      - 8000:8000
    depends_on:
      postgres:
        condition: service_healthy
    restart: on-failure
  
  repka_backend:
    build: ./repka_backend
    ports:
      - 8080:8080
    env_file:
      - ./env/repka_backend/.env
    depends_on:
      postgres:
        condition: service_healthy
    restart: on-failure

  app:
    container_name: repka_frontend_dc
    image: repka-frontend-docker
    build:
      context: /opt/repka_project_frontend/application
    ports:
      - 8001:8001
      - 80:80
      - 443:443
    depends_on:
      - nginx
    restart: on-failure

  nginx:
    image: nginx:1.19.2
    volumes:
      - ./repka_admin_nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./repka_admin_nginx/site.conf:/etc/nginx/conf.d/site.conf
      - static_volume:/opt/repka_admin/application/static/:rw
    depends_on:
      - repka_admin
    ports:
      - 80:80
    restart: on-failure

volumes:
  postgres_data:
  static_volume:
