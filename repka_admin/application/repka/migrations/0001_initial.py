# Generated by Django 3.2 on 2023-05-28 11:29

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.RunSQL(
            sql = 'create schema if not exists repka;',
            reverse_sql= 'drop schema repka cascade;'
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('category_name', models.TextField(verbose_name='category_name')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
                'db_table': 'repka"."category',
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('city_name', models.TextField(verbose_name='city_name')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Город',
                'verbose_name_plural': 'Города',
                'db_table': 'repka"."city',
            },
        ),
        migrations.CreateModel(
            name='Good',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.TextField(verbose_name='name')),
                ('photo', models.ImageField(blank=True, upload_to='', verbose_name='photo')),
                ('price', models.TextField(verbose_name='price')),
                ('volume', models.TextField(verbose_name='volume')),
                ('limit', models.TextField(blank=True, verbose_name='limit')),
                ('calories', models.TextField(blank=True, verbose_name='calories')),
                ('compound', models.TextField(blank=True, verbose_name='compound')),
                ('expiration_day', models.TextField(blank=True, verbose_name='expiration_day')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Товар',
                'verbose_name_plural': 'Товары',
                'db_table': 'repka"."good',
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('region_name', models.TextField(verbose_name='region_name')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Регион',
                'verbose_name_plural': 'Регионы',
                'db_table': 'repka"."region',
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('company_name', models.TextField(verbose_name='company_name')),
                ('contact_name', models.TextField(verbose_name='contact_name')),
                ('phone_number', models.TextField(verbose_name='phone_number')),
                ('email', models.TextField(verbose_name='email')),
                ('company_address', models.TextField(verbose_name='company_address')),
                ('website', models.TextField(blank=True, verbose_name='website')),
                ('social_network', models.TextField(blank=True, verbose_name='social_network')),
                ('delivery_time', models.TextField(blank=True, verbose_name='delivery_time')),
                ('delivery_day', models.TextField(blank=True, verbose_name='delivery_day')),
                ('min_price', models.TextField(blank=True, verbose_name='min_price')),
                ('OOO', models.TextField(blank=True, verbose_name='OOO')),
                ('OGRN', models.TextField(blank=True, verbose_name='OGRN')),
                ('INN', models.TextField(blank=True, verbose_name='INN')),
                ('bank_account', models.TextField(blank=True, verbose_name='bank_account')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Покупатель',
                'verbose_name_plural': 'Покупатели',
                'db_table': 'repka"."supplier',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('tag_name', models.TextField(verbose_name='tag_name')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repka.category')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Тег',
                'verbose_name_plural': 'Теги',
                'db_table': 'repka"."good_tag',
            },
        ),
        migrations.CreateModel(
            name='SupplierRegion',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repka.region')),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repka.supplier')),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'repka"."supplier_region',
            },
        ),
        migrations.CreateModel(
            name='SupplierCity',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repka.city')),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repka.supplier')),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'repka"."supplier_city',
            },
        ),
        migrations.CreateModel(
            name='SupplierCert',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('certificate', models.ImageField(blank=True, upload_to='', verbose_name='certificate')),
                ('certificate_url', models.TextField(blank=True, verbose_name='certificate_url')),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repka.supplier')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Сертификат поставщика',
                'verbose_name_plural': 'Сертификаты поставщиков',
                'db_table': 'repka"."supplier_cert',
            },
        ),
        migrations.AddField(
            model_name='supplier',
            name='delivery_city',
            field=models.ManyToManyField(through='repka.SupplierCity', to='repka.City'),
        ),
        migrations.AddField(
            model_name='supplier',
            name='delivery_region',
            field=models.ManyToManyField(through='repka.SupplierRegion', to='repka.Region'),
        ),
        migrations.CreateModel(
            name='GoodCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repka.category')),
                ('good', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repka.good')),
            ],
            options={
                'db_table': 'repka"."good_category',
            },
        ),
        migrations.AddField(
            model_name='good',
            name='category',
            field=models.ManyToManyField(through='repka.GoodCategory', to='repka.Category'),
        ),
        migrations.AddField(
            model_name='good',
            name='supplier',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repka.supplier'),
        ),
        migrations.AddField(
            model_name='city',
            name='region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repka.region'),
        ),
    ]
