# Generated by Django 3.2 on 2023-05-28 11:29

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.RunSQL(
            sql = 'create schema if not exists repka;',
            reverse_sql= 'drop schema repka cascade;',
        ),
        migrations.RunSQL(
            sql = '''create table if not exists repka.region(
            id uuid default gen_random_uuid() not null,
            region_name text not null,
            created timestamp with time zone default now(),
            modified timestamp with time zone default now(),
            primary key (id),
            unique(region_name)
            );''',
            reverse_sql = 'drop table if exists repka.region;',
        ),
        migrations.RunSQL(
            sql = '''create table if not exists repka.city(
            id uuid default gen_random_uuid() not null,
            city_name text not null,
            region_id uuid not null,
            created timestamp with time zone default now() not null,
            modified timestamp with time zone default now() not null,
            primary key (id),
            foreign key (region_id) references repka.region(id) on update cascade on delete cascade,
            unique(city_name, region_id)
            );''',
            reverse_sql = 'drop table if exists repka.city;',
        ),
        migrations.RunSQL(
            sql = '''create table if not exists repka.supplier(
            id uuid default gen_random_uuid() not null,
            company_name text not null,
            contact_name text not null,
            phone_number text not null,
            email text not null,
            company_adress text,
            website text,
            social_network text,
            delivery_time text not null,
            delivery_day text not null,
            min_price text not null,
            ooo text,
            ogrn text,
            inn text,
            created timestamp with time zone default now() not null,
            modified timestamp with time zone default now() not null,
            primary key (id)
            );''',
            reverse_sql = 'drop table if exists repka.supplier;',
        ),
        migrations.RunSQL(
            sql = '''create table if not exists repka.supplier_region(
            id uuid default gen_random_uuid() not null,
            supplier_id uuid not null,
            region_id uuid not null,
            created timestamp with time zone default now() not null,
            primary key (id),
            foreign key (region_id) references repka.region(id) on update cascade on delete cascade,
            foreign key (supplier_id) references repka.supplier(id) on update cascade on delete cascade
            );''',
            reverse_sql = 'drop table if exists repka.supplier_region;',
        ),
        migrations.RunSQL(
            sql = '''create table if not exists repka.supplier_city(
            id uuid default gen_random_uuid() not null,
            supplier_id uuid not null,
            city_id uuid not null,
            created timestamp with time zone default now() not null,
            primary key (id),
            foreign key (city_id) references repka.city(id) on update cascade on delete cascade,
            foreign key (supplier_id) references repka.supplier(id) on update cascade on delete cascade
            );''',
            reverse_sql = 'drop table if exists repka.supplier_city;',
        ),
        migrations.RunSQL(
            sql = '''create table if not exists repka.supplier_cert(
            id uuid default gen_random_uuid() not null,
            certificate bytea,
            certificate_url text,
            supplier_id uuid not null,
            created timestamp with time zone default now() not null,
            modified timestamp with time zone default now() not null,
            primary key (id),
            foreign key (supplier_id) references repka.supplier(id) on update cascade on delete cascade
            );''',
            reverse_sql = 'drop table if exists repka.supplier_cert;',
        ),
        migrations.RunSQL(
            sql = '''create table if not exists repka.category(
            id uuid default gen_random_uuid() not null,
            category_name text not null,
            created timestamp with time zone default now() not null,
            modified timestamp with time zone default now() not null,
            primary key (id),
            unique(category_name)
            );''',
            reverse_sql = 'drop table if exists repka.category;',
        ),
        migrations.RunSQL(
            sql = '''create table if not exists repka.tag(
            id uuid default gen_random_uuid() not null,
            tag_name text not null,
            category_id uuid not null,
            created timestamp with time zone default now() not null,
            modified timestamp with time zone default now() not null,
            primary key (id),
            foreign key (category_id) references repka.category(id) on update cascade on delete cascade,
            unique(tag_name, category_id)
            );''',
            reverse_sql = 'drop table if exists repka.tag;',
        ),
        migrations.RunSQL(
            sql = '''create table if not exists repka.good(
            id uuid default gen_random_uuid() not null,
            name text not null,
            photo bytea not null,
            price text not null,
            volume text not null,
            balance text not null,
            calories text,
            compound text,
            expiration_day text,
            supplier_id uuid not null,
            created timestamp with time zone default now() not null,
            modified timestamp with time zone default now() not null,
            primary key (id),
            foreign key (supplier_id) references repka.supplier(id) on update cascade on delete cascade
            );''',
            reverse_sql = 'drop table if exists repka.good;',
        ),
        migrations.RunSQL(
            sql = '''create table if not exists repka.good_category(
            id uuid default gen_random_uuid() not null,
            good_id uuid not null,
            category_id uuid not null,
            created timestamp with time zone default now() not null,
            primary key (id),
            foreign key (good_id) references repka.good(id) on update cascade on delete cascade,
            foreign key (category_id) references repka.category(id) on update cascade on delete cascade
            );''',
            reverse_sql = 'drop table if exists repka.good_category;',
        ),
    ]